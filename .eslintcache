[{"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\Landing.js":"1","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\CreateLetter.js":"2","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\index.js":"3","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\components\\Sidebar.js":"4","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\routes.js":"5","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\Result.js":"6"},{"size":721,"mtime":1731980924307,"results":"7","hashOfConfig":"8"},{"size":8481,"mtime":1731977749686,"results":"9","hashOfConfig":"8"},{"size":196,"mtime":1608756126000,"results":"10","hashOfConfig":"8"},{"size":603,"mtime":1608756126000,"results":"11","hashOfConfig":"8"},{"size":666,"mtime":1608756126000,"results":"12","hashOfConfig":"8"},{"size":1309,"mtime":1731983339614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v2aj93",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\Landing.js",[],"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\CreateLetter.js",["27","28","29","30"],"import React, { useState, useEffect } from 'react';\n\nimport {useHistory} from 'react-router-dom';\n\nimport api from '../services/api';\n\nimport '../styles/pages/create-letter.css';\n\nimport Sidebar from '../components/Sidebar';\n\nfunction CreateLetter() {\n    const [name, setName] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [letter, setLetter] = useState(\"\");\n    const [idade, setIdade] = useState(\"\");\n    const [presente, setPresente] = useState(\"\");\n\n    const [whatsapp, setWhatsapp] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const [stateList, setStateList] = useState([]);\n    const [cityList, setCityList] = useState([]);\n\n    const history = useHistory();\n\n    function buscarEstados() {\n        return new Promise(function (resolve, reject) {\n\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', `https://servicodados.ibge.gov.br/api/v1/localidades/estados`);\n            xhr.send(null);\n\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(\"Erro\");\n                    }\n                }\n            }\n        });\n    }\n\n    function buscarCidade(state) {\n        return new Promise(function (resolve, reject) {\n\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${state}/municipios`);\n            xhr.send(null);\n\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(\"Erro\");\n                    }\n                }\n            }\n        });\n    }\n\n    useEffect(() => {\n        buscarEstados().then(function (response) {\n            setStateList(response);\n        });\n    }, []);\n\n    useEffect(() => {\n        buscarCidade(state).then(function (response) {\n            setCityList(response);\n        });\n    }, [state]);\n\n    async function handleOnSubmit(e) {\n        e.preventDefault();\n      \n        const data = {\n          name,\n          idade,\n          state,\n          city,\n          presente,\n          letter,\n        //   email,\n          whatsapp,\n        };\n      \n        if ((!name) || (!state) || (!city) || (!letter)) {\n          return alert(\"Existem campos vazios.\");\n        }\n      \n        try {\n            // const response = await fetch('http://localhost:3333/save-letter', {\n\n          const response = await fetch('https://cartapapainoelbackend.onrender.com/save-letter', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n          });\n      \n          if (response.ok) {\n            alert('Cartinha salva com sucesso!');\n            history.push('/result', true);\n          } else {\n            alert('Erro ao salvar a cartinha!');\n          }\n        } catch (err) {\n          console.error('Erro na requisição:', err);\n          alert('Erro ao salvar a cartinha!');\n        }\n      }\n\n    function handleMask() {\n        let value = whatsapp;\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/^(\\d{2})(\\d)/g, \"($1) $2\");\n        value = value.replace(/(\\d)(\\d{4})$/, \"$1-$2\");\n\n        setWhatsapp(value);\n    }\n\n\n    return (\n        <div id=\"page-create-letter\">\n            {/* <Sidebar /> */}\n            <main>\n                <form onSubmit={handleOnSubmit} className=\"create-letter-form\">\n                    <fieldset>\n                        <legend>\n                            Cartinha Para o Noel!!!\n                        </legend>\n                        <div className=\"input-block\">\n                            <label htmlFor=\"name\">Nome</label>\n                            <input id=\"name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"input-block\">\n                            <label htmlFor=\"idade\">Idade</label>\n                            <input id=\"idade\"\n                                value={idade}\n                                maxLength={2}\n                                onChange={(e) => setIdade(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"input-group\">\n                            <div className=\"input-block\">\n                                <label htmlFor=\"state\">Estado</label>\n                                <select\n                                    defaultValue=\"\"\n                                    id=\"state\"\n                                    value={state}\n                                    onChange={(e) => { setState(e.target.value) }}\n                                >\n                                    <option disabled hidden value=\"\">Selecione uma opção</option>\n                                    {stateList.map((option, index) => {\n                                        return <option key={index} value={option.sigla}>{option.nome}</option>\n                                    })}\n                                </select>\n                            </div>\n                            <div className=\"input-block\">\n                                <label htmlFor=\"city\">Cidade</label>\n                                <select\n                                    defaultValue=\"\"\n                                    id=\"city\"\n                                    value={city}\n                                    onChange={(e) => { setCity(e.target.value) }}\n                                >\n                                    <option disabled hidden value=\"\">Selecione uma opção</option>\n                                    {cityList.map((option, index) => {\n                                        return <option key={index} value={option.sigla}>{option.nome}</option>\n                                    })}\n                                </select>\n                            </div>\n\n                        </div>\n\n                        <div className=\"input-block\">\n                            <label htmlFor=\"presente\">Qual presente você quer?<span>Escolha até 5!</span></label>\n                            <textarea id=\"\"\n                                maxLength={10000}\n                                value={presente}\n                                onChange={(e) => setPresente(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"input-block\">\n                            <label htmlFor=\"letter\">Me conte algo que você gostaria que acontecesse ou um segredo? <span></span></label>\n                            <textarea id=\"letter\"\n                                maxLength={10000}\n                                value={letter}\n                                onChange={(e) => setLetter(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"input-block\">\n                            <label htmlFor=\"whatsapp\">Numero do WhatsApp</label>\n                            <input id=\"whatsapp\"\n                                maxLength={15}\n                                value={whatsapp}\n                                onChange={(e) => setWhatsapp(e.target.value)}\n                                onKeyUp={handleMask}\n                            />\n                        </div>\n\n                        \n\n\n                    </fieldset>\n\n                    <button className=\"confirm-button\" type=\"submit\">\n                        Enviar Cartinha\n                    </button>\n                </form>\n            </main>\n        </div>\n    );\n}\n\n// eslint-disable-next-line no-lone-blocks\n{/* <div className=\"input-block\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input id=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)} />\n                        </div> */}\nexport default CreateLetter;","C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\index.js",[],"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\components\\Sidebar.js",[],"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\routes.js",[],"C:\\Users\\Johny\\Downloads\\workshop-cartas-papai-noel-main\\workshop-cartas-papai-noel-main\\web\\src\\pages\\Result.js",[],{"ruleId":"31","severity":1,"message":"32","line":5,"column":8,"nodeType":"33","messageId":"34","endLine":5,"endColumn":11},{"ruleId":"31","severity":1,"message":"35","line":9,"column":8,"nodeType":"33","messageId":"34","endLine":9,"endColumn":15},{"ruleId":"31","severity":1,"message":"36","line":20,"column":12,"nodeType":"33","messageId":"34","endLine":20,"endColumn":17},{"ruleId":"31","severity":1,"message":"37","line":20,"column":19,"nodeType":"33","messageId":"34","endLine":20,"endColumn":27},"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used."]